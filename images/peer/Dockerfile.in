# Copyright Greg Haskins All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
FROM _BASE_NS_/fabric-baseos:_BASE_TAG_
ENV FABRIC_CFG_PATH /etc/hyperledger/fabric
RUN mkdir -p /var/hyperledger/production $FABRIC_CFG_PATH
COPY payload/peer /usr/local/bin
ADD  payload/sampleconfig.tar.bz2 $FABRIC_CFG_PATH

##############################################################################
# temporary
RUN apt-get update && apt-get install -y netcat curl     

# BEGIN: Python HoneyBadgerMPC dependencies                                  #
ENV PYTHONUNBUFFERED=1

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-2018-10-24

ENV PATH /root/.cargo/bin:$PATH

# Install Python 3.7

RUN apt-get update && apt-get install -y git bison flex  locales zlib1g-dev python3-pip libffi-dev tmux libgmp-dev libmpc-dev libmpfr-dev  libflint-dev build-essential checkinstall zlib1g zlib1g-dev openssl libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev


# RUN gpg --recv-key AA65421D

RUN wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz

RUN wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz.asc

# RUN gpg --verify Python-3.7.2.tgz.asc
RUN cp Python-3.7.2.tgz /usr/src/
RUN cd /usr/src && tar -zxvf Python-3.7.2.tgz

RUN cd /usr/src/Python-3.7.2
RUN cd /usr/src/Python-3.7.2 && ./configure
RUN cd /usr/src/Python-3.7.2 && make altinstall

# building ntl from scratch
RUN cd /usr/src && wget https://www.shoup.net/ntl/ntl-11.3.2.tar.gz
RUN cd /usr/src && gunzip ntl-11.3.2.tar.gz 
RUN cd /usr/src && tar xf ntl-11.3.2.tar
RUN cd /usr/src/ntl-11.3.2/src && ./configure CXXFLAGS="-std=c++11 -march=native -O2 -fPIC" 
RUN cd /usr/src/ntl-11.3.2/src && make
RUN cd /usr/src/ntl-11.3.2/src && make install 


# Download and install honeybadgerMPC


RUN pip3.7 install --upgrade pip

RUN pip3.7 install pyyaml

RUN cp /usr/local/bin/python3.7 /usr/bin/python

RUN cd /usr/src 




RUN cd /usr/src/ && git clone https://github.com/hybridNeo/HoneyBadgerMPC.git

RUN cd /usr/src/HoneyBadgerMPC && git checkout dev




RUN cd /usr/src/HoneyBadgerMPC && pip3.7 install pairing/

# Make sh point to bash
RUN ln -sf bash /bin/sh



RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
ENV LANG en_US.UTF-8  
ENV LANGUAGE en_US:en  
ENV LC_ALL en_US.UTF-8 


# This is needed otherwise the build for the power sum solver will fail.
# This is a known issue in the version of libflint-dev in apt.
# https://github.com/wbhart/flint2/issues/217
# This has been fixed if we pull the latest code from the repo. However, we want
# to avoid compiling the lib from the source since it adds 20 minutes to the build.
# TODO change branch to hyperbadgermpc
RUN sed -i '30c #include "flint/flint.h"' /usr/include/flint/flintxx/flint_classes.h

ARG BUILD

WORKDIR /usr/src/HoneyBadgerMPC
RUN wget https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz
RUN tar -xvf pbc-0.5.14.tar.gz
RUN cd pbc-0.5.14 && ./configure && make && make install

ENV LIBRARY_PATH /usr/local/lib
ENV LD_LIBRARY_PATH /usr/local/lib

RUN git clone https://github.com/JHUISI/charm.git
RUN cd charm && git reset --hard be9587ccdd4d61c591fb50728ebf2a4690a2064f && ./configure.sh && make install
RUN pip install Cython

# RUN pip3 install --no-cache-dir -e git+https://github.com/initc3/HoneyBadgerMPC.git@dev 
# RUN pip3 install git+https://github.com/hybridNeo/HoneyBadgerMPC.git@dev
RUN pip install --no-cache-dir -e .[dev]


# END: Python HoneyBadgerMPC dependencies                                    #
##############################################################################


### Install preprocessing data
RUN cd /usr/src/HoneyBadgerMPC && git clone https://github.com/hybridNeo/sharedata

CMD ["peer","node","start"]
